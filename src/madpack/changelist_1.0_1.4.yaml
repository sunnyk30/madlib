# Changelist for MADlib version 1.0 to 1.3

# This file contains all changes that were introduced in a new version of
# MADlib. This changelist is used by the upgrade script to detect what objects
# should be upgraded (while retaining all other objects from the previous version)

# New modules (actually .sql_in files) added in upgrade version
# For these files the sql_in code is retained as is with the functions in the
# file installed on the upgrade version. All other files (that don't have
# updates), are cleaned up to remove object replacements
new module:
    # ----------------- Changes from 1.0 to 1.1 -----------------
    svd:
    pca:
    pca_project:
    # ----------------- Changes from 1.1 to 1.2 -----------------
    arima:
    arima_forecast:
    # ----------------- Changes from 1.3 to 1.4 -----------------
    robust_variance_coxph:
    clustered_variance_coxph:

# Changes in the types (UDT) including removal and modification
udt:
    # ----------------- Changes from 1.2 to 1.3 -----------------
    __logregr_result:
    linregr_result:
    # ----------------- Changes from 1.3 to 1.4 -----------------
    coxph_result:
    mlogregr_result:
    marginal_logregr_result:
    marginal_mlogregr_result:

# List of the UDF changes that affect the user externally.  This includes change
# in function name, change in argument order or argument types, and removal of
# the function. In each case, the original function is as good as removed and a
# new function is created. In such cases, we should abort the upgrade if there
# are user views dependent on this function, since the original function will
# not be present in the upgraded version.
udf:
    # ----------------- Changes from 1.0 to 1.1 -----------------
    # Matrix operations
    - __matrix_column_to_array_format:
        rettype: schema_madlib.matrix_result
        argument: matrix_in text, matrix_out text

    # ----------------- Changes from 1.2 to 1.3 -----------------
    # linear regression: 'num_processed' added in 'linregr_result'
    - linregr_final:
        rettype: schema_madlib.linregr_result
        argument: schema_madlib.bytea8
    - linregr_merge_states:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - linregr_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision, double precision[]

    # logistic regression: 'num_processed' added in '__logregr_result'
    - __logregr_cg_result:
        rettype: schema_madlib.__logregr_result
        argument: double precision[]

    - __logregr_irls_result:
        rettype: schema_madlib.__logregr_result
        argument: double precision[]

    - __logregr_igd_result:
        rettype: schema_madlib.__logregr_result
        argument: double precision[]

    # ----------------- Changes from 1.3 to 1.4 -----------------
    - __internal_get_robust_linregr_insert_string:
        rettype: character varying
        argument: schema_madlib.robust_linregr_result, double precision[], text
    - __internal_get_robust_linregr_result:
        rettype: schema_madlib.robust_linregr_result
        argument: character varying, character varying, character varying, double precision[]
    - __internal_get_robust_logregr_insert_string:
        rettype: character varying
        argument: schema_madlib.robust_logregr_result, text
    - __internal_get_robust_logregr_result:
        rettype: schema_madlib.robust_logregr_result
        argument: character varying, character varying, character varying, double precision[]
    - __internal_get_robust_mlogregr_insert_string:
        rettype: character varying
        argument: schema_madlib.robust_mlogregr_result, text
    - __lda_count_topic_prefunc:
        rettype: integer[]
        argument: integer[], integer[]
    - __lda_count_topic_sfunc:
        rettype: integer[]
        argument: integer[], integer[], integer[], integer[], integer, integer
    - __lda_gibbs_sample:
        rettype: integer[]
        argument: integer[], integer[], integer[], integer[], double precision, double precision, integer, integer, integer
    - __lda_perplexity_ffunc:
        rettype: double precision
        argument: integer[]
    - __lda_perplexity_prefunc:
        rettype: integer[]
        argument: integer[], integer[]
    - __lda_perplexity_sfunc:
        rettype: integer[]
        argument: integer[], integer[], integer[], integer[], integer[], double precision, double precision, integer, integer
    - __lda_util_transpose:
        rettype: integer[]
        argument: integer[]
    - __lda_util_unnest:
        rettype: SETOF integer[]
        argument: integer[]
    - clustered_variance_mlogregr:
        rettype: void
        argument: text, text, text, text, text, integer, text, integer, text, double precision
    - clustered_variance_mlogregr:
        rettype: void
        argument: text, text, text, text, text, integer, text, integer, text
    - clustered_variance_mlogregr:
        rettype: void
        argument: text, text, text, text, text, integer, text, integer, text, double precision, boolean
    - robust_input_checking:
        rettype: void
        argument: character varying, character varying, character varying, character varying

# Changes to aggregates (UDA) including removal and modification
# Overloaded functions should be mentioned separately
uda:
    # ----------------- Changes from 1.2 to 1.3 -----------------
    - linregr:
        rettype: schema_madlib.linregr_result
        argument: double precision, double precision[]
    # ----------------- Changes from 1.3 to 1.4 -----------------
    - __lda_count_topic_agg:
        rettype: integer[]
        argument: integer[], integer[], integer[], integer, integer
    - __lda_perplexity_agg:
        rettype: double precision
        argument: integer[], integer[], integer[], integer[], double precision, double precision, integer, integer

# Cast operators (UDC) updated/added in v1.1/v1.2
udc:
